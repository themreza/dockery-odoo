

# ============================================================
# ------------------------------------------------------------
#
# Dockery Odoo Devops Additions
#
# ------------------------------------------------------------
# ============================================================


USER root

# ============================================================
# Devops: conventionalized devops environment
# ============================================================

ENV WDB_NO_BROWSER_AUTO_OPEN=True \
    WDB_SOCKET_SERVER=wdb \
    WDB_WEB_PORT=1984 \
    WDB_WEB_SERVER=localhost \
    PYTHONPATH=${PYTHONPATH}:${ODOO_FRM} \
    DODOO_LOAD_OUT=/var/lib/dodoo-loader/logs.json

# Prepare odoo owned testlog folder for chrome screenshots
# Prepare odoo owned loading log folder for dodoo loader
RUN mkdir -p /var/log/dodoo/tests; \
    chown odoo:odoo /var/log/dodoo/tests; \
    mkdir -p /var/log/dodoo/loader; \
    chown odoo:odoo /var/log/dodoo/loader


# ============================================================
# Devops: conventionalized devops working directory
# ============================================================

# Can be relied upon for code analyzers or generators which are
# run from within the container

WORKDIR ${ODOO_BASEPATH}/src


# ============================================================
# Devops: convention about general devops tools
# ============================================================

# Size: ca. 57MB
RUN apt-get -qq update && apt-get -qq install -y curl wget mtr net-tools gnupg



# ============================================================
# Devops: browser testing (chrome headless)
# ============================================================

# Size: ca. 291MB
RUN wget --quiet -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list \
    && apt-get -qq update && apt-get -qq install -y --no-install-recommends google-chrome-stable > /dev/null



# ============================================================
# Devops: conventional python tools (dodoo, analyzers, etc)
# ============================================================

# Size: ca. 138MB
RUN set -ex; \
    \
    savedAptMark="$(apt-mark showmanual)"; \
    apt-get update; \
    apt-get install -y --no-install-recommends \
        #
        # ================================================
        # setup build dependencies for python packages ...
        # ================================================
        #
        build-essential \
        automake \
        libtool; \
        pip --quiet --quiet install --no-cache-dir \
            #
            # ================================================
            # dodoo devops toolchain
            # ================================================
            #
            dodoo-tester \
            dodoo-initializer \
            dodoo-loader \
            dodoo-migrator \
            #
            # ================================================
            # additional odoo development tooling
            # ================================================
            #
            odoo-module-migrator \
            #
            # ================================================
            # analyzers, linters, debuggers, repls, tooling
            # ================================================
            #
            astor \
            pylint-odoo \
            pylint-mccabe \
            coverage \
            ptpython \
            pudb \
            pyinotify \
            watchdog \
            wdb \
            jq \
            #
            # ================================================
            # browser testing, js test recording
            # ================================================
            #
            websocket-client \
            ffmpeg; \
            #
            # ================================================
            # still trying to keep it minimal ...
            # (more style than reason)
            # ================================================
            #
        find /usr/local -depth \
            \( \
                \( -type d -a \( -name test -o -name tests \) \) \
                -o \
                \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \) \
            \) -exec rm -rf '{}' +; \
    #
    # ================================================
    # and remove build dependencies again ...
    # (slightly more reason than style)
    # ================================================
    #
    apt-mark auto '.*' > /dev/null; \
    [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; \
    apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
    rm -rf /var/lib/apt/lists/*;
